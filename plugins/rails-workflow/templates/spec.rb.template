# frozen_string_literal: true

require 'rails_helper'

RSpec.describe <%= class_name %>, type: :<%= spec_type %> do
  # == Setup ================================================================
<% if let_blocks && let_blocks.any? %>
<% let_blocks.each do |let_block| %>
  let(:<%= let_block[:name] %>) { <%= let_block[:value] %> }
<% end %>
<% end %>

  # == Tests ================================================================
  describe '<%= main_method %>' do
    context 'when given valid input' do
      it '<%= expected_behavior %>' do
        # Arrange
        <%= arrange_code %>

        # Act
        <%= act_code %>

        # Assert
        <%= assert_code %>
      end
    end

    context 'when given invalid input' do
      it 'raises an error' do
        # Arrange
        <%= arrange_invalid_code %>

        # Act & Assert
        expect { <%= act_code %> }.to raise_error(<%= expected_error %>)
      end
    end

    context 'edge cases' do
      <%= edge_case_tests %>
    end
  end

  # == Validation Tests =====================================================
<% if validations && validations.any? %>
  describe 'validations' do
<% validations.each do |validation| %>
    it { should <%= validation[:matcher] %> }
<% end %>
  end
<% end %>

  # == Association Tests ====================================================
<% if associations && associations.any? %>
  describe 'associations' do
<% associations.each do |association| %>
    it { should <%= association[:matcher] %> }
<% end %>
  end
<% end %>

  # == Additional Tests =====================================================
  <%= additional_tests %>
end
